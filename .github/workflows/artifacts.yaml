name: Artifacts
on:
  workflow_call:
    inputs:
      publish:
        description: Publish artifacts to the artifact store
        default: false
        required: false
        type: boolean
    outputs:
      container-image-name:
        description: Container image name
        value: ${{ jobs.container-images.outputs.name }}
      container-image-digest:
        description: Container image digest
        value: ${{ jobs.container-images.outputs.digest }}
      container-image-ref:
        description: Container image ref
        value: ${{ jobs.container-images.outputs.ref }}

permissions:
  contents: read

jobs:
  container-images:
    name: Container images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - alpine
          - distroless

    permissions:
      attestations: write
      contents: read
      packages: write
      id-token: write
      security-events: write

    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Set up Syft
        uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

      - name: Install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Set image name
        id: image-name
        run: echo "value=682033504346.dkr.ecr.ap-south-1.amazonaws.com/my-repo" >> "$GITHUB_OUTPUT"

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ${{ steps.image-name.outputs.value }}
          flavor: |
            latest = false
          tags: |
            type=ref,event=branch,enable=${{ matrix.variant == 'alpine' }}
            type=ref,event=pr,prefix=pr-,enable=${{ matrix.variant == 'alpine' }}
            type=semver,pattern={{raw}},enable=${{ matrix.variant == 'alpine' }}
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch && matrix.variant == 'alpine' }}
            type=ref,event=branch,suffix=-${{ matrix.variant }}
            type=ref,event=pr,prefix=pr-,suffix=-${{ matrix.variant }}
            type=semver,pattern={{raw}},suffix=-${{ matrix.variant }}
            type=raw,value=latest,enable={{is_default_branch}},suffix=-${{ matrix.variant }}
          labels: |
            org.opencontainers.image.documentation=https://dexidp.io/docs/

      - name: Determine build output
        uses: haya14busa/action-cond@94f77f7a80cd666cb3155084e428254fea4281fd # v1.2.1
        id: build-output
        with:
          cond: ${{ inputs.publish }}
          if_true: type=image,push=true
          if_false: type=oci,dest=image.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-id: 682033504346
          region: ap-south-1

      - name: Build and push image
        id: build
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            BASE_IMAGE=${{ matrix.variant }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            COMMIT_HASH=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: ${{ steps.build-output.outputs.value }}

      - name: Sign the images with GitHub OIDC Token
        run: |
          cosign sign --yes ${{ steps.image-name.outputs.value }}@${{ steps.build.outputs.digest }}
        if: inputs.publish

      - name: Set image ref
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

      - name: Fetch image
        run: skopeo --insecure-policy copy docker://${{ steps.image-ref.outputs.value }} oci-archive:image.tar
        if: inputs.publish

      - name: Extract OCI tarball
        run: |
          mkdir -p image
          tar -xf image.tar -C image

      - name: Get data
        id: date
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Restore trivy cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: cache/db
          key: trivy-cache-${{ steps.date.outputs.date }}
          restore-keys: trivy-cache-

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # 0.29.0
        with:
          input: image
          format: sarif
          output: trivy-results.sarif
          scan-type: "fs"
          scan-ref: "."
          cache-dir: "./cache"

      - name: change permissions for trivy.db
        run: sudo chmod 0644 ./cache/db/trivy.db

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: "[${{ github.job }}] Trivy scan results"
          path: trivy-results.sarif
          retention-days: 5
          overwrite: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          sarif_file: trivy-results.sarif
