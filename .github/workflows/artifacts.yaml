name: Artifacts

on:
  workflow_call:
    inputs:
      publish:
        description: "Publish artifacts to the artifact store"
        type: boolean
        default: false
      branch:
        description: "Branch to build from"
        type: string
        required: false
      tag_name:
        description: "Custom image tag override"
        type: string
        required: false
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true

permissions:
  contents: read

jobs:
  container-images:
    name: Container Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - alpine
          - distroless
        platform:
          - linux/amd64
          - linux/arm64
    
    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS Public ECR
        id: login-ecr
        run: |
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws

      - name: Set Image Name
        id: image-name
        run: |
          IMAGE_NAME="public.ecr.aws/u6x9w5c9/my-repo"
          TAG="${{ inputs.tag_name != '' && inputs.tag_name || env.SHORT_SHA }}"
          echo "value=$IMAGE_NAME:$TAG" >> "$GITHUB_OUTPUT"

      - name: Extract Short SHA for Unique Tagging
        id: short-sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ steps.image-name.outputs.value }}
          build-args: |
            BASE_IMAGE=${{ matrix.variant }}
          outputs: type=image,push=${{ inputs.publish }}

      - name: Set Image Reference
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

      - name: Upload Image as Artifact (Only for PRs)
        uses: actions/upload-artifact@v4
        with:
          name: "OCI-Image-${{ matrix.variant }}-${{ env.PLATFORM_TAG }}"
          path: image.tar
        if: github.event_name == 'pull_request'
