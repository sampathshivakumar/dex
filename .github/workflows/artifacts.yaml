name: Artifacts

on:
  workflow_call:
    inputs:
      publish:
        description: Publish artifacts to the artifact store
        default: false
        required: false
        type: boolean
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
    outputs:
      container-image-name:
        description: Container image name
        value: ${{ jobs.alpine-amd64.outputs.name }}
      container-image-digest:
        description: Container image digest
        value: ${{ jobs.alpine-amd64.outputs.digest }}
      container-image-ref:
        description: Container image ref
        value: ${{ jobs.alpine-amd64.outputs.ref }}

permissions:
  contents: read
  id-token: write 

jobs:
  setup:
    name: Setup Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to AWS Public ECR
        id: login-ecr
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

  alpine-amd64:
    name: Build and Push Alpine (amd64)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          tags: public.ecr.aws/u6x9w5c9/my-repo:alpine-amd64
          build-args: BASE_IMAGE=alpine
          outputs: type=image,push=true

  alpine-arm64:
    name: Build and Push Alpine (arm64)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          tags: public.ecr.aws/u6x9w5c9/my-repo:alpine-arm64
          build-args: BASE_IMAGE=alpine
          outputs: type=image,push=true

  distroless-amd64:
    name: Build and Push Distroless (amd64)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          tags: public.ecr.aws/u6x9w5c9/my-repo:distroless-amd64
          build-args: BASE_IMAGE=distroless
          outputs: type=image,push=true

  distroless-arm64:
    name: Build and Push Distroless (arm64)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          tags: public.ecr.aws/u6x9w5c9/my-repo:distroless-arm64
          build-args: BASE_IMAGE=distroless
          outputs: type=image,push=true
